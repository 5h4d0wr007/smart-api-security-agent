name: OpenAPI → Postman MCP → Security tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  actions: read
  security-events: write   # <-- REQUIRED for SARIF upload

jobs:
  api-security:
    runs-on: ubuntu-latest

    env:
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      POSTMAN_API_KEY: ${{ secrets.POSTMAN_API_KEY }}
      POSTMAN_MCP_URL: https://mcp.postman.com/mcp
      POSTMAN_WORKSPACE_NAME: Security Demo

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install deps
        run: |
          set -e
          npm install -g @apidevtools/swagger-cli
          sudo apt-get update -y
          sudo apt-get install -y jq curl
          # oasdiff (static binary)
          curl -fsSL -o /usr/local/bin/oasdiff https://github.com/Tufin/oasdiff/releases/download/v1.10.28/oasdiff_linux_amd64
          chmod +x /usr/local/bin/oasdiff
          # Python deps (if needed)
          python -m pip install --upgrade pip
          pip install requests openai

      - name: Start sample app (localhost:8000)
        run: |
          pip install flask
          python app/app.py &
          echo $! > app.pid
          # sanity wait
          sleep 2

      - name: Compute OpenAPI diff (base vs head)
        run: |
          set -euo pipefail
          cp openapi/api.v1.yaml .tmp.base.yaml || true
          cp openapi/api.yaml .tmp.head.yaml
          swagger-cli validate .tmp.base.yaml
          swagger-cli validate .tmp.head.yaml
          oasdiff diff --format json .tmp.base.yaml .tmp.head.yaml > diff.json
          jq -r 'paths(scalars) as $p | {"path":$p,"value":getpath($p)}' diff.json | head -n 20 || true

      - name: LLM → plan & create/overwrite collection via Postman MCP
        run: |
          python tools/agent_openapi_to_postman.py --base openapi/api.v1.yaml --head openapi/api.yaml

      - name: Postman CLI login (non-interactive)
        env:
          POSTMAN_API_KEY: ${{ secrets.POSTMAN_API_KEY }}
        run: |
          postman login --with-api-key "$POSTMAN_API_KEY"

      - name: Run generated collection with Postman CLI (JSON reporter)
        continue-on-error: true
        run: |
          postman collection run ./generated-security-test.postman_collection.json \
            --reporters cli,json \
            --reporter-json-export run.json \
          || true

      - name: Convert Postman report → SARIF
        run: |
          python tools/cli_report_to_sarif.py run.json sarif.json
          jq '.runs[0].results | length as $n | "SARIF results: \($n)"' sarif.json

      # ---------- This is the critical, final SARIF upload step ----------
      - name: Upload SARIF to GitHub Code Scanning
        if: ${{ github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name == github.repository }}
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: sarif.json
          category: openapi-postman-security
          # associate to the PR head commit if this is a PR, else use current sha
          commit_sha: ${{ github.event.pull_request.head.sha || github.sha }}
          ref: ${{ github.event.pull_request.head.ref || github.ref }}

      # Optional: keep artifacts so you can download & inspect locally
      - name: Upload artifacts (diff, plan, run, sarif, collection)
        uses: actions/upload-artifact@v4
        with:
          name: api-security-output
          path: |
            diff.json
            plan.json
            run.json
            sarif.json
            generated-security-test.postman_collection.json

      - name: Stop app
        if: always()
        run: |
          if [ -f app.pid ]; then kill $(cat app.pid) || true; fi
